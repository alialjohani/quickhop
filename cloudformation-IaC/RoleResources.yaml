Resources:
  # Create a new IAM Role
  QuickhopEC2BackendIAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeCommitPowerUser
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonCognitoPowerUser
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/AmazonConnect_FullAccess
        - arn:aws:iam::aws:policy/AmazonLexFullAccess

  QuickhopEC2FrontendIAMRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeCommitPowerUser
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess

  # Create an Instance Profile and associate it with the IAM Role
  QuickhopEC2BackendProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - Ref: QuickhopEC2BackendIAMRole

  QuickhopEC2FrontendProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - Ref: QuickhopEC2FrontendIAMRole

  LambdaRoleQuickhopConnectEventDbUpdate:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaRoleQuickhopConnectEventDbUpdate
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite

  LambdaRoleQuickhopConnectEventRecording:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaRoleQuickhopConnectEventRecording
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  LambdaRoleCommon:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaRoleCommon
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
  
  # IAM Role for Lex Bot
  LexRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lex.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSLambdaExecute
        - arn:aws:iam::aws:policy/AmazonLexFullAccess
  
  StepFunctionExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: QuickHopStepFunctionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - states.amazonaws.com
            Action: 
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess

  EventBridgeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EventBridgeInvokeStepFunctionsRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: "events.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess

Outputs:
  QuickhopEC2BackendProfile:
    Value: !Ref QuickhopEC2BackendProfile
    Export:
      Name: QuickhopEC2BackendProfile
  QuickhopEC2FrontendProfile:
    Value: !Ref QuickhopEC2FrontendProfile
    Export:
      Name: QuickhopEC2FrontendProfile
  LambdaRoleQuickhopConnectEventDbUpdateArn:
    Description: "IAM Role ARN for Lambda Execution (quickhop-connect-event-dbUpdate)"
    Value: !GetAtt LambdaRoleQuickhopConnectEventDbUpdate.Arn
    Export:
      Name: LambdaRoleQuickhopConnectEventDbUpdateArn
  LambdaRoleQuickhopConnectEventRecordingArn:
    Description: "IAM Role ARN for Lambda Execution (quickhop-connect-event-recording)"
    Value: !GetAtt LambdaRoleQuickhopConnectEventRecording.Arn
    Export:
      Name: LambdaRoleQuickhopConnectEventRecordingArn
  LambdaRoleCommonArn:
    Description: "IAM Role ARN for Lambda Execution (for both: quickhop-connect-lex-ai and quickhop-connect-getCallerInfoByJobMatchingId)"
    Value: !GetAtt LambdaRoleCommon.Arn
    Export:
      Name: LambdaRoleCommonArn
  LexRoleArn:
    Description: "IAM Role ARN for Lex Bot"
    Value: !GetAtt LexRole.Arn
    Export:
      Name: LexRoleArn
  StepFunctionRoleArn:
    Description: "ARN of the IAM Role for Step Function Execution"
    Value: !GetAtt StepFunctionExecutionRole.Arn
    Export:
      Name: StepFunctionRoleArn
  EventBridgeRoleArn:
    Description: "ARN of the IAM Role used by EventBridge"
    Value: !GetAtt EventBridgeRole.Arn
    Export:
      Name: EventBridgeRoleArn
